spring.application.name=order-service
server.port=8084

spring.config.import=optional:configserver:${CONFIG_SERVICE_URL:http://localhost:8086}

#Activer le health indicator pour les circuit breakers
management.health.circuitbreakers.enabled=true

#Toujours afficher les d etails de /actuator/health
management.endpoint.health.show-details=always

#Activer health indicator
resilience4j.circuitbreaker.instances.clientServiceCB.register-health-indicator=true
#Taille de la fen etre de surveillance (nombre d appels a analyser)
resilience4j.circuitbreaker.instances.clientServiceCB.sliding-window-size=5
#Nombre minimal d appels avant d activer les calculs d echec
resilience4j.circuitbreaker.instances.clientServiceCB.minimum-number-of-calls=3
#Pourcentage d echec tolere avant ouverture du circuit
resilience4j.circuitbreaker.instances.clientServiceCB.failure-rate-threshold=50
#Temps d attente avant de passer d OPEN a HALF_OPEN
resilience4j.circuitbreaker.instances.clientServiceCB.wait-duration-in-open-state=5s
#Nombre d appels autorises en mode HALF_OPEN
resilience4j.circuitbreaker.instances.clientServiceCB.permitted-number-of-calls-in-half-open-state=2

#Activer health indicator
resilience4j.circuitbreaker.instances.produitServiceCB.register-health-indicator=true
#Taille de la fen etre de surveillance (nombre d appels a analyser)
resilience4j.circuitbreaker.instances.produitServiceCB.sliding-window-size=5
#Nombre minimal d appels avant d activer les calculs d echec
resilience4j.circuitbreaker.instances.produitServiceCB.minimum-number-of-calls=3
#Pourcentage d echec tolere avant ouverture du circuit
resilience4j.circuitbreaker.instances.produitServiceCB.failure-rate-threshold=50
#Temps d attente avant de passer d OPEN a HALF_OPEN
resilience4j.circuitbreaker.instances.produitServiceCB.wait-duration-in-open-state=5s
#Nombre d appels autorises en mode HALF_OPEN
resilience4j.circuitbreaker.instances.produitServiceCB.permitted-number-of-calls-in-half-open-state=2