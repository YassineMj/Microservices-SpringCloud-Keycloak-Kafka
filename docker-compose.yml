services:

  # === Keycloak 8080 ===
  spring-cloud-keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=yassine
      - KEYCLOAK_ADMIN_PASSWORD=yassine
    command: start-dev
    ports:
      - "8080:8080"

  # === mongo 8081 ===
  spring-cloud-mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    depends_on:
      - spring-cloud-keycloak
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: clientdb
    volumes:
      - mongo_data:/data/db

  spring-cloud-mongo-express:
    image: mongo-express:1.0.0-18
    container_name: mongo-express
    restart: always
    depends_on:
      - spring-cloud-mongodb
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123

  # === PostgreSQL 5432 ===
  spring-cloud-postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: yassine
      POSTGRES_PASSWORD: yassine
      POSTGRES_DB: postgresdb
    depends_on:
      - spring-cloud-mongo-express
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # === MySql 3306 ===
  spring-cloud-mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    depends_on:
      - spring-cloud-postgres
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: produitdb
      MYSQL_USER: yassine
      MYSQL_PASSWORD: yassine
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # === Zookeeper (Kafka d√©pend de lui) ===
  spring-cloud-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    depends_on:
      - spring-cloud-mysql
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # === Kafka 9092 ===
  spring-cloud-kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - spring-cloud-zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://spring-cloud-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  spring-cloud-discovery-service:
    build: ./discovery-service
    container_name: discovery-service
    depends_on:
      - spring-cloud-kafka
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]


  spring-cloud-config-service:
    build: ./config-service
    container_name: config-service
    ports:
      - "8086:8086"
    depends_on:
      spring-cloud-discovery-service:
        condition: service_healthy
    environment:
      - DISCOVERY_SERVICE_URL=http://spring-cloud-discovery-service:8761/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/actuator/health" ]


  spring-cloud-client-service:
    build: ./client-service
    container_name: client-service
    ports:
      - "8082:8082"
    depends_on:
      spring-cloud-config-service:
        condition: service_healthy
    environment:
      - DISCOVERY_SERVICE_URL=http://spring-cloud-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://spring-cloud-config-service:8086
      - MYREALM_URL=http://spring-cloud-keycloak:8080/realms/myrealm
      - CERTS_URL=http://spring-cloud-keycloak:8080/realms/myrealm/protocol/openid-connect/certs
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
      - MONGO_URI=mongodb://root:rootpass@spring-cloud-mongodb:27017/clientdb?authSource=admin
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]


  spring-cloud-produit-service:
    build: ./produit-service
    container_name: produit-service
    ports:
      - "8083:8083"
    depends_on:
      spring-cloud-client-service:
        condition: service_healthy
    environment:
      - DISCOVERY_SERVICE_URL=http://spring-cloud-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://spring-cloud-config-service:8086
      - MYREALM_URL=http://spring-cloud-keycloak:8080/realms/myrealm
      - CERTS_URL=http://spring-cloud-keycloak:8080/realms/myrealm/protocol/openid-connect/certs
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
      - MYSQL_URL=jdbc:mysql://spring-cloud-mysql:3306/produitdb
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]


  spring-cloud-order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8084:8084"
    depends_on:
      spring-cloud-produit-service:
        condition: service_healthy
    environment:
      - DISCOVERY_SERVICE_URL=http://spring-cloud-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://spring-cloud-config-service:8086
      - MYREALM_URL=http://spring-cloud-keycloak:8080/realms/myrealm
      - CERTS_URL=http://spring-cloud-keycloak:8080/realms/myrealm/protocol/openid-connect/certs
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
      - POSTGRES_URL=jdbc:postgresql://spring-cloud-postgres:5432/postgresdb
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/actuator/health" ]


  spring-cloud-payment-service:
    build: ./payment-service
    container_name: payment-service
    ports:
      - "8085:8085"
    depends_on:
      spring-cloud-order-service:
        condition: service_healthy
    environment:
      - KAFKA_URL=spring-cloud-kafka:9092
      - CONFIG_SERVICE_URL=http://spring-cloud-config-service:8086
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/actuator/health" ]


  spring-cloud-gateway-service:
    build: ./gateway
    container_name: gateway-service
    ports:
      - "8888:8888"
    depends_on:
      - spring-cloud-payment-service
    environment:
      - DISCOVERY_SERVICE_URL=http://spring-cloud-discovery-service:8761/eureka
      - CONFIG_SERVICE_URL=http://spring-cloud-config-service:8086
      - MYREALM_URL=http://spring-cloud-keycloak:8080/realms/myrealm
      - CERTS_URL=http://spring-cloud-keycloak:8080/realms/myrealm/protocol/openid-connect/certs
      - KEYCLOAK_URL=http://spring-cloud-keycloak:8080
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]

volumes:
  mongo_data:
  mysql_data:
  postgres_data: